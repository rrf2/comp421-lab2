To keep track of each process within our kernel, we created a PCB structure that stored necessary information (ExceptionInfo, SavedContext, PTE, etc.). Within each PCB, to track the status of each child, we created a linked list that contains the PID of the returning child process and the status integer. To track which process should be run next, we created a ready queue and a delay queue that are structured as linked lists. In order to support multi-terminal usage, we created an array of terminal structures that contained the writing and reading buffers. Each this array is initiated in the KernelState along with the initial Region 1 and Region 0 page tables.

To test our kernel we used the test cases provided. Our kernel sometimes behaves oddly won init.c


ROBBIE FOLEY rrf2
LUSIA LU ll45